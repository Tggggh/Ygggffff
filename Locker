-- LocalScript (for the player's client-side logic)
local player = game.Players.LocalPlayer
local screenGui = player.PlayerGui:WaitForChild("ScreenGui")
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 200, 0, 50)
toggleButton.Position = UDim2.new(0.5, -100, 0.9, -25)
toggleButton.Text = "Toggle Lock On"
toggleButton.Parent = screenGui

-- Variables to keep track of the toggle state and circle
local isToggled = false
local circle = nil

-- Function to handle the toggle button click
toggleButton.MouseButton1Click:Connect(function()
    isToggled = not isToggled
    toggleButton.Text = isToggled and "Toggle Off" or "Toggle On"
    
    -- When toggled on, create the circle
    if isToggled then
        if circle then
            circle:Destroy()  -- Ensure we don't create multiple circles
        end
        
        circle = Instance.new("Part")
        circle.Shape = Enum.PartType.Ball
        circle.Size = Vector3.new(2, 2, 2)
        circle.Color = Color3.fromRGB(255, 0, 0)  -- Red Circle
        circle.Anchored = true
        circle.CanCollide = false
        circle.Parent = workspace
    else
        -- When toggled off, destroy the circle
        if circle then
            circle:Destroy()
            circle = nil
        end
    end
end)

-- Lock the circle to the player's head
local function lockCircleToHead()
    local head = player.Character and player.Character:FindFirstChild("Head")
    if head and circle then
        circle.Position = head.Position + Vector3.new(0, 2, 0)  -- Offset the circle above the head
    end
end

-- Lock the circle to the nearest player's head
local function lockOnToPlayer()
    local closestPlayer = nil
    local closestDistance = math.huge  -- Start with an impossibly large distance

    -- Check all players in the game to find the closest one
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local otherHead = otherPlayer.Character:FindFirstChild("Head")
            if otherHead then
                local distance = (circle.Position - otherHead.Position).magnitude
                if distance < closestDistance then
                    closestPlayer = otherPlayer
                    closestDistance = distance
                end
            end
        end
    end

    -- Lock the circle to the closest player's head
    if closestPlayer and closestPlayer.Character then
        local targetHead = closestPlayer.Character:FindFirstChild("Head")
        if targetHead then
            circle.Position = targetHead.Position + Vector3.new(0, 2, 0)
        end
    end
end

-- Handle lock behavior while toggle is active
game:GetService("RunService").Heartbeat:Connect(function()
    if isToggled then
        -- Lock circle to player's head
        lockCircleToHead()
        
        -- Lock circle to the closest player
        lockOnToPlayer()
    end
end)

-- Example of shooting a projectile
local function shootProjectile(startPosition, direction)
    local projectile = Instance.new("Part")
    projectile.Size = Vector3.new(1, 1, 3)
    projectile.Shape = Enum.PartType.Ball
    projectile.Color = Color3.fromRGB(0, 255, 0)  -- Green Projectile
    projectile.Position = startPosition
    projectile.Anchored = false
    projectile.CanCollide = true
    projectile.Parent = workspace

    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = direction * 50  -- Speed of the projectile
    bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
    bodyVelocity.Parent = projectile

    -- Detect if the projectile touches the circle
    projectile.Touched:Connect(function(hit)
        if hit == circle then
            print("Projectile hit the circle!")
            -- Handle what happens when the projectile hits the circle (e.g., destroy the projectile)
            projectile:Destroy()
        end
    end)
end

-- Example shooting trigger (add your own trigger logic to fire projectiles)
-- This example fires a projectile in a specific direction when the user presses a key
local function fireProjectile()
    local startPosition = player.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0)  -- Start above the player
    local direction = (workspace.CurrentCamera.CFrame.LookVector)  -- Fire in the direction the camera is facing
    shootProjectile(startPosition, direction)
end

-- Example usage: Bind shooting to a key (e.g., "F")
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.F then
        fireProjectile()
    end
end)
